# Copyright 2005-2006 Kevin Reid, under the terms of the MIT X license
# found at http://www.opensource.org/licenses/mit-license.html ................

? [1, 2] + [3, 4]
# value: [1, 2, 3, 4]

? __makeList :DeepFrozen
# value: <makeConstList>

? [1, 2, 2].asMap()
# value: [0 => 1, 1 => 2, 2 => 2]

asKeys/1
  
  ? [1, 2, 2].asKeys()
  # value: [1 => null, 2 => null]
  
  ? [].asKeys()
  # value: [].asMap()

  ? [null, 4, 1, 2, 3, 4, 5, 6, 7].asKeys()
  # value: [null => null, 4 => null, 1 => null, 2 => null, 3 => null, 5 => null, 6 => null, 7 => null]
  
? [1, 2, 2].asSet()
# value: [1, 2].asSet()

? ["a", 'b', 3].last()
# value: 3

? ["a", ['b'], 3].__optUncall()
# value: [<makeConstList>, "run", ["a", ['b'], 3]]

coercion
  ? ['a', 'b'][def _ { to __conformTo(_) :any { return 1 }}]
  # value: 'b'
  
startOf/1-2

  ? [1, 1, 2, 1, 2].startOf([1, 2])
  # value: 1
  
  ? [1, 1, 2, 1, 2].startOf([2, 2])
  # value: -1

  ? [1, 1, 2, 1, 2].startOf([1, 2], 2)
  # value: 3

  ? [1, 1, 2, 1, 2].startOf([1, 2], 4)
  # value: -1

