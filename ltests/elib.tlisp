; Copyright 2005-2007 Kevin Reid, under the terms of the MIT X license
; found at http://www.opensource.org/licenses/mit-license.html ................

(defclass for-test () ())

(deftest unexternalizable-optimization.no
  (macrolet ((x (&environment e) (unexternalizable-optimization-p e)))
    (x))
  nil)

(deftest unexternalizable-optimization.yes
  (macrolet ((x (&environment e) (unexternalizable-optimization-p e)))
    (with-unexternalizable-optimization (x)))
  t)

(deftest vtable-prefix-enough 
  (princ-to-string (nth-value 1 (ignore-errors 
    (eval `(def-vtable for-test
             (:|run| ()
               :hi))))))
  "Method \"run\" has 0 parameters, which is not enough to accept 1 prefix argument.")

(deftest guard->type-specifier->guard
  (collect-mismatches 
    #'samep
    #'identity
    (lambda (guard)
      (type-specifier-to-guard (guard-to-type-specifier guard)))
    (list (e-lambda "$typeSpecifierTest" ())))
  nil)

(deftest type-specifier->guard->type-specifier
  (collect-mismatches 
    #'equal
    #'identity
    (lambda (ts)
      (guard-to-type-specifier (type-specifier-to-guard ts)))
    '((integer -10 10)))
  nil)

(deftest shorten-guard
  (guard-to-type-specifier
    (make-instance 'e.elib::forwarding-ref :target
      (type-specifier-to-guard 'integer)))
  integer)
  
(deftest e-print-class-guard
  (e-print (type-specifier-to-guard (find-class 'integer)))
  "int")
  
(deftest boolean-print-readably-package
  (with-output-to-string (*standard-output*)
    (with-standard-io-syntax
      (dolist (*print-readably* '(nil t))
        (dolist (*read-eval* '(nil t))
          (terpri)
          (dolist (*package* '(#.*package* #.(find-package :keyword)))
            (dolist (b (list +e-true+ +e-false+))
              (princ " ")
              (handler-case
                (prin1 b)
                (print-not-readable (c) (prin1 ':NR)))))))))
  "
 #.+E-TRUE+ #.+E-FALSE+ #.E.ELIB:+E-TRUE+ #.E.ELIB:+E-FALSE+
 #.+E-TRUE+ #.+E-FALSE+ #.E.ELIB:+E-TRUE+ #.E.ELIB:+E-FALSE+
 :NR :NR :NR :NR
 #.+E-TRUE+ #.+E-FALSE+ #.E.ELIB:+E-TRUE+ #.E.ELIB:+E-FALSE+")
