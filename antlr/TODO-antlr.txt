Parsing bugs:

  Fails to parse:
    Object expressions (def and thunk) followed by guards (unexpected token: [":",<126>,line=1,col=10])
    N-ary infix operators and update forms ("a + (b, c)") -- deprecated? if so, should report a specific error
    Object expressions in atomic and high-precedence positions:
      x & def y{}
      x & thunk{}
      def x implements def auditor {} {}

  Bad parse trees:
    "interfaceExpr" rule comes out with a node type of "interface" even though there's a setType action (huh?)

Meta:
  Allow retrieving pragma change information, or have a state object which holdsÂ it, for persistence across REPL inputs as E-on-Java does

DONE:
    Interface expressions (unexpected token "interface"). Some additional testing seems to indicate that it is only interface expressions preceded by doc-comments which fail to parse.
    /** foo */ thunk { b } -- unexpected token: [\"thunk\",<131>,line=1,col=12]"))
    <foo+bar> -- (unknown:1)@1: unexpected token: [\"<\",<174>,line=1,col=1] -- + is legal in a URI scheme expr
    Quasi expressions (tagged`` and untagged `` forms) (unexpected token: ["`",<290>,line=229,col=63])
