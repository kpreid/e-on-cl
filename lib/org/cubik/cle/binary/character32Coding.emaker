# Copyright 2007-2008 Kevin Reid, under the terms of the MIT X license
# found at http://www.opensource.org/licenses/mit-license.html ................

pragma.syntax("0.9")


def unsignedIntegerCoding := <import:org.cubik.cle.binary.unsignedIntegerCoding>

def u64 := unsignedIntegerCoding[64]

def character32Coding implements DeepFrozen, ExitViaHere { # implements Binary
  to asType() { return char }
  to writingTo(out) { # , schedule
    # XXX consult stream's byte size
    return def writer(n :char) {
      throw("Unimplemented")
    }
  }
  to takingFrom(ins, schedule) {
    # XXX consult stream's byte size
    return def taker() :char {
      throw("Unimplemented")
    }
  }
}