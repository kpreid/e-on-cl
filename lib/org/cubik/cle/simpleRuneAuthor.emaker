# Copyright 2005 Kevin Reid, under the terms of the MIT X license
# found at http://www.opensource.org/licenses/mit-license.html ................

pragma.enable("easy-return")
pragma.disable("explicit-result-guard")

pragma.enable("importer")
pragma.enable("exporter")

def simpleRuneAuthor {
  to defaultAuths(<unsafe>) {
    def privilegedScope := <unsafe:org.cubik.cle.boot.privilegedScope>
    return [
      "file__uriGetter" => privilegedScope["file__uriGetter"],
      "privilegedScope" => privilegedScope
    ]
  }
  
  to run(auths :Map) {
    def [=> <file>, => privilegedScope] | _ := auths
  
    def simpleRune {
      to run(args :List) {
        # XXX 
        def [scriptName] + scriptArgs := args
        
        def scope := privilegedScope
        
        return e__quasiParser(<file: scriptName>.getTwine()) <- eval(scope)
      }
    }
    return simpleRune
  }
}