# Copyright 2005 Kevin Reid, under the terms of the MIT X license
# found at http://www.opensource.org/licenses/mit-license.html ................

pragma.enable("easy-return")
pragma.disable("explicit-result-guard")

def typeTag := "type."

def typeLoader { # XXX implements DeepFrozen once import__uriGetter is DeepFrozen
  to __printOn(out :TextWriter) {
    out.print("<type:*>")
  }

  to get(fqn :String) :any {
    return import__uriGetter[
      def lastDotPos := fqn.lastIndexOf1('.')
      if (lastDotPos == -1) {
        typeTag + fqn
      } else {
        fqn(0, lastDotPos + 1) + typeTag + fqn(lastDotPos + 1)
      }]
  }
}
