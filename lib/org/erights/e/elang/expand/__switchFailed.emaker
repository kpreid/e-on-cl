pragma.syntax("0.9")


def defineException :DeepFrozen := <import:org.cubik.cle.fail.defineException>
#def defineExceptionGuard :DeepFrozen := <import:org.cubik.cle.fail.defineExceptionGuard>

def makeSwitchFailure :DeepFrozen := defineException(
  [def failureFQN := meta.context().getFQNPrefix() + "SwitchFailure"], 
  def _(out :TextWriter, [=> specimen, => failures]) as DeepFrozen {  
    out.print(specimen)
    out.write(" did not match any option:")
    def outi := out.indent()
    for failure in failures { outi.lnPrint(failure) }
  })
# def SwitchFailure := defineExceptionGuard([failureFQN])

{def __switchFailed implements DeepFrozen, ExitViaHere {
  match [=="run", [specimen] + failures] {
    # XXX avoid printing
    throw(makeSwitchFailure([=> specimen, => failures]))
  }
}}
