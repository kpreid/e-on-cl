pragma.syntax("0.9")

pragma.enable("function-implements")

{def __mapExtract implements DeepFrozen, ExitViaHere {
  to run(key) :any {
    return def extractor(specimen, optEjector) implements DeepFrozen.optionally() { # implements ViaFunction
      return escape e {
        [specimen.fetch(key, e), specimen.without(key)]
      } catch _ {
        # XXX avoid printing
        throw.eject(optEjector, E.toQuote(key) + " not in matched map: " + E.toQuote(specimen))
      }
    }
  }
  to "default"(key, defaultValue) :any {
    return def defaultingExtractor(specimen, optEjector) implements DeepFrozen.optionally() { # implements ViaFunction
      return [specimen.fetch(key, fn { return [defaultValue, specimen] }), specimen.without(key)]
    }
  }
}}
