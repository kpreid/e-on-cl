# Copyright 2002 Combex, Inc. under the terms of the MIT X license
# found at http://www.opensource.org/licenses/mit-license.html ................

pragma.syntax("0.9")

<import:org.cubik.cle.makeAdvisoryInterface>(
/**
 * A Slot implements a potentially mutable variable as an object with a
 * "value" property. <p>
 * <p/>
 * This supertype only provides the accessor function, since the setting
 * function is optional.
 *
 * @author Mark S. Miller
 */
interface "org.erights.e.elib.slot.Slot" {
  /**
   * Get the current value of the variable.
   */
  to get() :any
  /**
   * Sets the current value of the variable to be a coercion of specimen to
   * a value that meets the constraints represented by this slot.
   * <p/>
   * get() will then return this value. If the variable is final
   * (immutable), then throw an informative exception instead.
   */
  to put(newValue :any) :void
  /**
   * Says whether the Slot acts like a {@link FinalSlot}.
   */
  to isFinal() :boolean
})