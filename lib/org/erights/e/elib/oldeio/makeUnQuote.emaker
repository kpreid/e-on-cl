# Copyright 2005-2007 Kevin Reid, under the terms of the MIT X license
# found at http://www.opensource.org/licenses/mit-license.html ................

pragma.syntax("0.9")

# XXX EventuallyDeepFrozen needs to be made prettier
def EventuallyDeepFrozen :(<import:org.erights.e.elib.slot.Same>)[DeepFrozen."eventually"()] := DeepFrozen."eventually"()

def makeUnQuote implements EventuallyDeepFrozen, ExitViaHere {

  /** For DeepFrozen#eventually */
  method __optSealedDispatch(brand) :any {
    if (brand == EventuallyDeepFrozen.getPeekBrand()) {
      EventuallyDeepFrozen.getPeekSealer().seal(meta.getState())
    }
  }

  to run(text :Twine) {
    def unQuote implements DeepFrozen {
      to __printOn(out :TextWriter) {
        out.print(text)
      }
      
      # XXX indirect self-reference for DF auditing
      to __optUncall() { return [<elib:oldeio.makeUnQuote>, "run", [text]] }
    }
    return unQuote
  }
}