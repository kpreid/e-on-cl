# Copyright 2005 Kevin Reid, under the terms of the MIT X license
# found at http://www.opensource.org/licenses/mit-license.html ................

pragma.enable("easy-return")
pragma.disable("explicit-result-guard")

def PassByCopy0 extends __makeGuard(PassByCopy0) {
  to __printOn(out :TextWriter) :void {
    out.print("PassByCopy")
  }
  
  to audit(objectExpr, witness) :boolean {
    throw("PassByCopy auditing not implemented")
  }
  
  to coerce(specimen, optEjector) :any {
    # XXX make BaseGuard provide this coercion pattern
    return \
      if (Ref.isPassByCopy(specimen)) {
        specimen
      } else if (Ref.isPassByCopy(
                   def coerced := specimen.__conformTo(PassByCopy0))) {
        coerced
      } else {
        throw.eject(optEjector, `not PassByCopy: $specimen`)
      }
  }
}
